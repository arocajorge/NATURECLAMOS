@model info.general.tbl_queja_Info

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView_reclamos_resumen";
        settings.CallbackRouteValues = new { Controller = "ReclamoResumen", Action = "GridViewPartial_reclamos_resumen", fecha_ini = Model.fecha_ini, fecha_fin = Model.fecha_fin, IdDepartamento = Model.IdDepartamento, IdQueja_estado=Model.IdQueja_estado };
        settings.Width = Unit.Percentage(100);
        settings.KeyFieldName = "IdQueja";

        settings.CommandColumn.Visible = false;
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        //Configuración para que la grilla no muestre texto completo
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.Control;

        //Configuración scrolling y pager
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10000;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;
        //Configuración filtro por columna
        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;

        settings.HtmlRowPrepared = (s, e) =>
        {
            if (Convert.ToBoolean(e.GetValue("info_estado.qe_se_modifica")) == false)
            {
                e.Row.ForeColor = System.Drawing.Color.Blue;
            }
        };

        settings.Columns.Add(c =>
        {
            c.Caption = "#";
            c.SetDataItemTemplateContent(tc =>
            {
                if (Convert.ToBoolean(DataBinder.Eval(tc.DataItem, "info_estado.qe_se_modifica" )) == true)
                {
                    ViewContext.Writer.Write(
                Html.ActionLink("Modificar", "Modificar", new { IdQueja = DataBinder.Eval(tc.DataItem, "IdQueja") }) + "&nbsp;" +
                        Html.ActionLink("Anular", "Anular", new { IdQueja = DataBinder.Eval(tc.DataItem, "IdQueja") },
                            new { onclick = "return confirm('¿Está seguro de que desea anular el registro?')" })
                    );
                }
            });
            c.SetHeaderTemplateContent(tc =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Nuevo", "Nuevo").ToHtmlString()
                );
            });
            c.Settings.AllowDragDrop = DefaultBoolean.False;
            c.Settings.AllowSort = DefaultBoolean.False;
            c.Width = Unit.Pixel(100);
        });

        settings.Columns.Add("IdQueja","ID").Width = Unit.Pixel(50);
        settings.Columns.Add(column =>
        {
            column.FieldName = "qu_fecha";
            column.Caption = "Fecha";
            column.Width = Unit.Pixel(75);
            column.PropertiesEdit.DisplayFormatString = "d";
            column.SettingsHeaderFilter.Mode = GridHeaderFilterMode.DateRangePicker;
        });
        settings.Columns.Add("info_estado.qe_descripcion", "Estado").Width = Unit.Pixel(100);
        settings.Columns.Add("info_mes.me_descripcion", "Mes").Width = Unit.Pixel(100);
        settings.Columns.Add("info_canal.qc_descripcion","Canal").Width = Unit.Pixel(150);
        settings.Columns.Add("info_departamento.de_descripcion","Departamento").Width = Unit.Pixel(150);
        settings.Columns.Add("info_origen.qo_descripcion","Origen").Width = Unit.Pixel(100);
        settings.Columns.Add("info_tipo.qt_descripcion","Tipo").Width = Unit.Pixel(150);
        settings.Columns.Add("info_motivo.qm_descripcion","Motivo").Width = Unit.Pixel(150);
        settings.Columns.Add("info_sucursal.su_descripcion","Sucursal").Width = Unit.Pixel(150);
        settings.Columns.Add("cl_nombre","Cliente").Width = Unit.Pixel(150);
        settings.Columns.Add("cl_telefono","Teléfono").Width = Unit.Pixel(150);
        settings.Columns.Add("cl_correo","Correo").Width = Unit.Pixel(150);
        settings.Columns.Add("qu_detalle","Detalle").Width = Unit.Pixel(300);
        settings.Columns.Add("qu_solucion","Solución").Width = Unit.Pixel(300);
        settings.Columns.Add("info_estado.qe_se_modifica").Visible = false;
        settings.Columns.Add("IdUsuario","Usuario").Width = Unit.Pixel(100);
        settings.Columns.Add("IdUsuarioCierre", "Usuario Cierre").Width = Unit.Pixel(100);

        settings.Columns.Add(column =>
        {
            column.Caption = "";
            column.SetDataItemTemplateContent(container =>
            {
                Html.DevExpress().HyperLink(hyperlink =>
                {
                    var keyValue = DataBinder.Eval(container.DataItem, "IdQueja");
                    hyperlink.Properties.Text = "Ver adjuntos";
                    hyperlink.NavigateUrl = Url.Action("Adjuntos", "Reclamo", new { IdQueja = keyValue });
                }).Render();
            });
        });
        settings.Columns.Add(column =>
        {
            column.Caption = "";
            column.SetDataItemTemplateContent(container =>
            {
                Html.DevExpress().HyperLink(hyperlink =>
                {
                    var keyValue = DataBinder.Eval(container.DataItem, "IdQueja");
                    hyperlink.Properties.Text = "No conformidad";
                    hyperlink.NavigateUrl = Url.Action("Nuevo", "NoConformidad", new { IdQueja = keyValue });
                }).Render();
            });
        });
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Count, "IdQueja");
        settings.Settings.ShowFooter = true;
        settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Count, "IdQueja");
        settings.Settings.ShowGroupPanel = true;
    });
}
@grid.Bind(ViewBag.lst_queja).GetHtml()